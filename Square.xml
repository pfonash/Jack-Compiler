<class>
  <keyword>class</keyword>
  <identifier beingDefined="yes" category="class" index="None" kind="None" type="None">Square</identifier>
  <symbol>{</symbol>
  <classVarDec>
    <keyword>field</keyword>
    <keyword>int</keyword>
    <identifier beingDefined="yes" category="field" index="0" kind="field" type="int">x</identifier>
    <symbol>,</symbol>
    <identifier beingDefined="yes" category="field" index="1" kind="field" type="int">y</identifier>
    <symbol>;</symbol>
  </classVarDec>
  <classVarDec>
    <keyword>field</keyword>
    <keyword>int</keyword>
    <identifier beingDefined="yes" category="field" index="2" kind="field" type="int">size</identifier>
    <symbol>;</symbol>
  </classVarDec>
  <subroutineDec>
    <keyword>constructor</keyword>
    <identifier beingDefined="yes" category="subroutineDec" index="None" kind="None" type="None">Square</identifier>
    <identifier beingDefined="yes" category="subroutineDec" index="None" kind="None" type="None">new</identifier>
    <symbol>(</symbol>   
    <parameterList>
      <keyword>int</keyword>
      <identifier beingDefined="yes" category="arg" index="0" kind="arg" type="int">Ax</identifier>
      <symbol>,</symbol>
      <keyword>int</keyword>
      <identifier beingDefined="yes" category="arg" index="1" kind="arg" type="int">Ay</identifier>
      <symbol>,</symbol>
      <keyword>int</keyword>
      <identifier beingDefined="yes" category="arg" index="2" kind="arg" type="int">Asize</identifier>
    </parameterList>
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <letStatement>
          <keyword>let</keyword>
          <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier beingDefined="no" index="0" kind="arg" type="int">Ax</identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier beingDefined="no" index="1" kind="arg" type="int">Ay</identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <letStatement>
          <keyword>let</keyword>
          <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
          <symbol>=</symbol>
          <expression>
            <term>
              <identifier beingDefined="no" index="2" kind="arg" type="int">Asize</identifier>
            </term>
          </expression>
          <symbol>;</symbol>
        </letStatement>
        <doStatement>
          <keyword>do</keyword>
          <identifier beingDefined="no" category="subroutine">draw</identifier>
          <symbol>(</symbol>
          <expressionList />
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>return</keyword>
          <expression>
            <term>
              <keyword>this</keyword>
            </term>
          </expression>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier beingDefined="yes" category="subroutineDec" index="None" kind="None" type="None">dispose</identifier>
    <symbol>(</symbol>
    <parameterList />
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <doStatement>
          <keyword>do</keyword>
          <identifier beingDefined="no" category="subroutine">Memory</identifier>
          <symbol>.</symbol>
          <identifier beingDefined="no" category="subroutine">deAlloc</identifier>
          <symbol>(</symbol>
          <expressionList>
            <expression>
              <term>
                <keyword>this</keyword>
              </term>
            </expression>
          </expressionList>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier beingDefined="yes" category="subroutineDec" index="None" kind="None" type="None">draw</identifier>
    <symbol>(</symbol>
    <parameterList />
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <doStatement>
          <keyword>do</keyword>
          <identifier beingDefined="no" category="subroutine">Screen</identifier>
          <symbol>.</symbol>
          <identifier beingDefined="no" category="subroutine">setColor</identifier>
          <symbol>(</symbol>
          <expressionList>
            <expression>
              <term>
                <keyword>true</keyword>
              </term>
            </expression>
          </expressionList>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <doStatement>
          <keyword>do</keyword>
          <identifier beingDefined="no" category="subroutine">Screen</identifier>
          <symbol>.</symbol>
          <identifier beingDefined="no" category="subroutine">drawRectangle</identifier>
          <symbol>(</symbol>
          <expressionList>
            <expression>
              <term>
                <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
              </term>
            </expression>
            <symbol>,</symbol>
            <expression>
              <term>
                <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
              </term>
            </expression>
            <symbol>,</symbol>
            <expression>
              <term>
                <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
              </term>
              <symbol>+</symbol>
              <term>
                <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
              </term>
            </expression>
            <symbol>,</symbol>
            <expression>
              <term>
                <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
              </term>
              <symbol>+</symbol>
              <term>
                <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
              </term>
            </expression>
          </expressionList>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier beingDefined="yes" category="subroutineDec" index="None" kind="None" type="None">erase</identifier>
    <symbol>(</symbol>
    <parameterList />
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <doStatement>
          <keyword>do</keyword>
          <identifier beingDefined="no" category="subroutine">Screen</identifier>
          <symbol>.</symbol>
          <identifier beingDefined="no" category="subroutine">setColor</identifier>
          <symbol>(</symbol>
          <expressionList>
            <expression>
              <term>
                <keyword>false</keyword>
              </term>
            </expression>
          </expressionList>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <doStatement>
          <keyword>do</keyword>
          <identifier beingDefined="no" category="subroutine">Screen</identifier>
          <symbol>.</symbol>
          <identifier beingDefined="no" category="subroutine">drawRectangle</identifier>
          <symbol>(</symbol>
          <expressionList>
            <expression>
              <term>
                <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
              </term>
            </expression>
            <symbol>,</symbol>
            <expression>
              <term>
                <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
              </term>
            </expression>
            <symbol>,</symbol>
            <expression>
              <term>
                <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
              </term>
              <symbol>+</symbol>
              <term>
                <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
              </term>
            </expression>
            <symbol>,</symbol>
            <expression>
              <term>
                <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
              </term>
              <symbol>+</symbol>
              <term>
                <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
              </term>
            </expression>
          </expressionList>
          <symbol>)</symbol>
          <symbol>;</symbol>
        </doStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier beingDefined="yes" category="subroutineDec" index="None" kind="None" type="None">incSize</identifier>
    <symbol>(</symbol>
    <parameterList />
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <symbol>(</symbol>
              <expression>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                    </term>
                    <symbol>+</symbol>
                    <term>
                      <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
                <symbol>&lt;</symbol>
                <term>
                  <integerConstant>254</integerConstant>
                </term>
              </expression>
              <symbol>)</symbol>
            </term>
            <symbol>&amp;</symbol>
            <term>
              <symbol>(</symbol>
              <expression>
                <term>
                  <symbol>(</symbol>
                  <expression>
                    <term>
                      <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                    </term>
                    <symbol>+</symbol>
                    <term>
                      <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                    </term>
                  </expression>
                  <symbol>)</symbol>
                </term>
                <symbol>&lt;</symbol>
                <term>
                  <integerConstant>510</integerConstant>
                </term>
              </expression>
              <symbol>)</symbol>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">erase</identifier>
              <symbol>(</symbol>
              <expressionList />
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                </term>
                <symbol>+</symbol>
                <term>
                  <integerConstant>2</integerConstant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">draw</identifier>
              <symbol>(</symbol>
              <expressionList />
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier beingDefined="yes" category="subroutineDec" index="None" kind="None" type="None">decSize</identifier>
    <symbol>(</symbol>
    <parameterList />
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
            </term>
            <symbol>&gt;</symbol>
            <term>
              <integerConstant>2</integerConstant>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">erase</identifier>
              <symbol>(</symbol>
              <expressionList />
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                </term>
                <symbol>-</symbol>
                <term>
                  <integerConstant>2</integerConstant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">draw</identifier>
              <symbol>(</symbol>
              <expressionList />
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier beingDefined="yes" category="subroutineDec" index="None" kind="None" type="None">moveUp</identifier>
    <symbol>(</symbol>
    <parameterList />
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
            </term>
            <symbol>&gt;</symbol>
            <term>
              <integerConstant>1</integerConstant>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">Screen</identifier>
              <symbol>.</symbol>
              <identifier beingDefined="no" category="subroutine">setColor</identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword>false</keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">Screen</identifier>
              <symbol>.</symbol>
              <identifier beingDefined="no" category="subroutine">drawRectangle</identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <symbol>(</symbol>
                    <expression>
                      <term>
                        <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                      </term>
                      <symbol>+</symbol>
                      <term>
                        <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                      </term>
                    </expression>
                    <symbol>)</symbol>
                  </term>
                  <symbol>-</symbol>
                  <term>
                    <integerConstant>1</integerConstant>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                  </term>
                  <symbol>+</symbol>
                  <term>
                    <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                  </term>
                  <symbol>+</symbol>
                  <term>
                    <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                </term>
                <symbol>-</symbol>
                <term>
                  <integerConstant>2</integerConstant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">Screen</identifier>
              <symbol>.</symbol>
              <identifier beingDefined="no" category="subroutine">setColor</identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword>true</keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">Screen</identifier>
              <symbol>.</symbol>
              <identifier beingDefined="no" category="subroutine">drawRectangle</identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                  </term>
                  <symbol>+</symbol>
                  <term>
                    <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                  </term>
                  <symbol>+</symbol>
                  <term>
                    <integerConstant>1</integerConstant>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier beingDefined="yes" category="subroutineDec" index="None" kind="None" type="None">moveDown</identifier>
    <symbol>(</symbol>
    <parameterList />
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <symbol>(</symbol>
              <expression>
                <term>
                  <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                </term>
                <symbol>+</symbol>
                <term>
                  <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                </term>
              </expression>
              <symbol>)</symbol>
            </term>
            <symbol>&lt;</symbol>
            <term>
              <integerConstant>254</integerConstant>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">Screen</identifier>
              <symbol>.</symbol>
              <identifier beingDefined="no" category="subroutine">setColor</identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword>false</keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">Screen</identifier>
              <symbol>.</symbol>
              <identifier beingDefined="no" category="subroutine">drawRectangle</identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                  </term>
                  <symbol>+</symbol>
                  <term>
                    <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                  </term>
                  <symbol>+</symbol>
                  <term>
                    <integerConstant>1</integerConstant>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                </term>
                <symbol>+</symbol>
                <term>
                  <integerConstant>2</integerConstant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">Screen</identifier>
              <symbol>.</symbol>
              <identifier beingDefined="no" category="subroutine">setColor</identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword>true</keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">Screen</identifier>
              <symbol>.</symbol>
              <identifier beingDefined="no" category="subroutine">drawRectangle</identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <symbol>(</symbol>
                    <expression>
                      <term>
                        <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                      </term>
                      <symbol>+</symbol>
                      <term>
                        <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                      </term>
                    </expression>
                    <symbol>)</symbol>
                  </term>
                  <symbol>-</symbol>
                  <term>
                    <integerConstant>1</integerConstant>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                  </term>
                  <symbol>+</symbol>
                  <term>
                    <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                  </term>
                  <symbol>+</symbol>
                  <term>
                    <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier beingDefined="yes" category="subroutineDec" index="None" kind="None" type="None">moveLeft</identifier>
    <symbol>(</symbol>
    <parameterList />
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
            </term>
            <symbol>&gt;</symbol>
            <term>
              <integerConstant>1</integerConstant>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">Screen</identifier>
              <symbol>.</symbol>
              <identifier beingDefined="no" category="subroutine">setColor</identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword>false</keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">Screen</identifier>
              <symbol>.</symbol>
              <identifier beingDefined="no" category="subroutine">drawRectangle</identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <symbol>(</symbol>
                    <expression>
                      <term>
                        <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                      </term>
                      <symbol>+</symbol>
                      <term>
                        <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                      </term>
                    </expression>
                    <symbol>)</symbol>
                  </term>
                  <symbol>-</symbol>
                  <term>
                    <integerConstant>1</integerConstant>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                  </term>
                  <symbol>+</symbol>
                  <term>
                    <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                  </term>
                  <symbol>+</symbol>
                  <term>
                    <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                </term>
                <symbol>-</symbol>
                <term>
                  <integerConstant>2</integerConstant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">Screen</identifier>
              <symbol>.</symbol>
              <identifier beingDefined="no" category="subroutine">setColor</identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword>true</keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">Screen</identifier>
              <symbol>.</symbol>
              <identifier beingDefined="no" category="subroutine">drawRectangle</identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                  </term>
                  <symbol>+</symbol>
                  <term>
                    <integerConstant>1</integerConstant>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                  </term>
                  <symbol>+</symbol>
                  <term>
                    <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <subroutineDec>
    <keyword>method</keyword>
    <keyword>void</keyword>
    <identifier beingDefined="yes" category="subroutineDec" index="None" kind="None" type="None">moveRight</identifier>
    <symbol>(</symbol>
    <parameterList />
    <symbol>)</symbol>
    <subroutineBody>
      <symbol>{</symbol>
      <statements>
        <ifStatement>
          <keyword>if</keyword>
          <symbol>(</symbol>
          <expression>
            <term>
              <symbol>(</symbol>
              <expression>
                <term>
                  <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                </term>
                <symbol>+</symbol>
                <term>
                  <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                </term>
              </expression>
              <symbol>)</symbol>
            </term>
            <symbol>&lt;</symbol>
            <term>
              <integerConstant>510</integerConstant>
            </term>
          </expression>
          <symbol>)</symbol>
          <symbol>{</symbol>
          <statements>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">Screen</identifier>
              <symbol>.</symbol>
              <identifier beingDefined="no" category="subroutine">setColor</identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword>false</keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">Screen</identifier>
              <symbol>.</symbol>
              <identifier beingDefined="no" category="subroutine">drawRectangle</identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                  </term>
                  <symbol>+</symbol>
                  <term>
                    <integerConstant>1</integerConstant>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                  </term>
                  <symbol>+</symbol>
                  <term>
                    <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
            <letStatement>
              <keyword>let</keyword>
              <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
              <symbol>=</symbol>
              <expression>
                <term>
                  <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                </term>
                <symbol>+</symbol>
                <term>
                  <integerConstant>2</integerConstant>
                </term>
              </expression>
              <symbol>;</symbol>
            </letStatement>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">Screen</identifier>
              <symbol>.</symbol>
              <identifier beingDefined="no" category="subroutine">setColor</identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <keyword>true</keyword>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
            <doStatement>
              <keyword>do</keyword>
              <identifier beingDefined="no" category="subroutine">Screen</identifier>
              <symbol>.</symbol>
              <identifier beingDefined="no" category="subroutine">drawRectangle</identifier>
              <symbol>(</symbol>
              <expressionList>
                <expression>
                  <term>
                    <symbol>(</symbol>
                    <expression>
                      <term>
                        <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                      </term>
                      <symbol>+</symbol>
                      <term>
                        <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                      </term>
                    </expression>
                    <symbol>)</symbol>
                  </term>
                  <symbol>-</symbol>
                  <term>
                    <integerConstant>1</integerConstant>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="0" kind="field" type="int">x</identifier>
                  </term>
                  <symbol>+</symbol>
                  <term>
                    <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                  </term>
                </expression>
                <symbol>,</symbol>
                <expression>
                  <term>
                    <identifier beingDefined="no" index="1" kind="field" type="int">y</identifier>
                  </term>
                  <symbol>+</symbol>
                  <term>
                    <identifier beingDefined="no" index="2" kind="field" type="int">size</identifier>
                  </term>
                </expression>
              </expressionList>
              <symbol>)</symbol>
              <symbol>;</symbol>
            </doStatement>
          </statements>
          <symbol>}</symbol>
        </ifStatement>
        <returnStatement>
          <keyword>return</keyword>
          <symbol>;</symbol>
        </returnStatement>
      </statements>
      <symbol>}</symbol>
    </subroutineBody>
  </subroutineDec>
  <symbol>}</symbol>
</class>
